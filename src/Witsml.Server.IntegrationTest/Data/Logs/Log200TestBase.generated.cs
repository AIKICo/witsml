//----------------------------------------------------------------------- 
// PDS.Witsml.Server, 2016.1
//
// Copyright 2016 Petrotechnical Data Systems
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//-----------------------------------------------------------------------

// ----------------------------------------------------------------------
// <auto-generated>
//     Changes to this file may cause incorrect behavior and will be lost
//     if the code is regenerated.
// </auto-generated>
// ----------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using Energistics.DataAccess;
using Energistics.DataAccess.WITSML200;
using Energistics.DataAccess.WITSML200.ComponentSchemas;
using Energistics.DataAccess.WITSML200.ReferenceData;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace PDS.Witsml.Server.Data.Logs
{
    public abstract partial class Log200TestBase : IntegrationTestBase
    {
        public const string BasicXMLTemplate = "<logs xmlns=\"http://www.energistics.org/energyml/data/witsmlv2\" version=\"2.0\"><log uidWell=\"{0}\" uidWellbore=\"{1}\" uid=\"{2}\">{3}</log></logs>";

        public Well Well { get; set; }
        public Wellbore Wellbore { get; set; }
        public Log Log { get; set; }
        public DevKit200Aspect DevKit { get; set; }
        public TestContext TestContext { get; set; }
        public List<Log> QueryEmptyList { get; set; }

        [TestInitialize]
        public void TestSetUp()
        {
            DevKit = new DevKit200Aspect(TestContext);

            Well = new Well
            {
                Uuid = DevKit.Uid(),
                Citation = DevKit.Citation("Well"),
                GeographicLocationWGS84 = DevKit.Location(),
                SchemaVersion = "2.0",
                TimeZone = DevKit.TimeZone
            };
            Wellbore = new Wellbore
            {
                Uuid = DevKit.Uid(),
                Citation = DevKit.Citation("Wellbore"),
                Well = DevKit.DataObjectReference(Well),
                SchemaVersion = "2.0"
            };
            Log = new Log
            {
                Uuid = DevKit.Uid(),
                Citation = DevKit.Citation("Log"),
                Wellbore = DevKit.DataObjectReference(Wellbore),
                SchemaVersion = "2.0"
            };

            QueryEmptyList = DevKit.List(new Log());

            BeforeEachTest();
            OnTestSetUp();
        }

        [TestCleanup]
        public void TestCleanUp()
        {
            AfterEachTest();
            OnTestCleanUp();
            DevKit.Container.Dispose();
            DevKit = null;
        }

        partial void BeforeEachTest();

        partial void AfterEachTest();

        protected virtual void OnTestSetUp() { }

        protected virtual void OnTestCleanUp() { }

        protected virtual void AddParents()
        {
            DevKit.AddAndAssert(Well);
            DevKit.AddAndAssert(Wellbore);
        }
    }
}